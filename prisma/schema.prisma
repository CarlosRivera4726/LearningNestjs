// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Address {
  id        String   @id @default(cuid())
  street    String
  city      String
  state     String
  zip       String
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?  @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id       String   @id @unique @default(cuid())
  email    String   @unique
  name     String?
  password String
  seller   Boolean  @default(false)
  address  Address?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product   product?
  order     order?
}

model product {
  id           String         @id @default(cuid())
  name         String
  description  String
  price        Float
  seller       User           @relation(fields: [sellerId], references: [id])
  sellerId     String         @unique
  image        String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  orderId      String?
  quantity     Float          @default(0)
  ProductOrder ProductOrder[]
}

model ProductOrder {
  id        String   @id @default(cuid())
  product   product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  order     order?   @relation(fields: [orderId], references: [id])
  orderId   String?
}

model order {
  id         String         @id @default(cuid())
  product    ProductOrder[]
  user       User           @relation(fields: [userId], references: [id])
  userId     String         @unique
  totalPrice Float          @default(0)
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt
}
